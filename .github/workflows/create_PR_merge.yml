name: Auto Create PR and Merge on Format Check

on:
  push:
    branches:
      - '**'
      - '!main'

permissions:
  pull-requests: write
  contents: write

jobs:
  createPR:
    runs-on: ubuntu-latest
    outputs:
      pr_number: ${{ steps.create_pr.outputs.pull_request_number }}
    steps:
      - name: Check if actor is trusted
        id: check_trusted
        env:
          TRUSTED_CONTRIBUTORS: ${{ secrets.TRUSTED_CONTRIBUTORS }}
        run: |
          if echo "${TRUSTED_CONTRIBUTORS}" | grep -wq "${{ github.actor }}"; then
            echo "IS_TRUSTED=true" >> $GITHUB_ENV
          else
            echo "IS_TRUSTED=false" >> $GITHUB_ENV
          fi

      - name: Checkout code
        if: env.IS_TRUSTED == 'true'
        uses: actions/checkout@v4

      - name: Get last commit title and message
        if: env.IS_TRUSTED == 'true'
        id: commit
        run: |
          echo "title=$(git log -1 --pretty=%s)" >> $GITHUB_OUTPUT
          echo "message=$(git log -1 --pretty=%b)" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        if: env.IS_TRUSTED == 'true'
        id: create_pr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh_pr_up() { gh pr create $* || gh pr edit $* }
          gh_pr_up --title "${{ steps.commit.outputs.title }}" \
                   --body "${{ steps.commit.outputs.message }}" \
                   --label automerge \
                   --author "${{ github.event.commits[0].author.name }} <${{ github.event.commits[0].author.email }}>" \
                   --committer "${{ github.event.commits[0].author.name }} <${{ github.event.commits[0].author.email }}>" \
                   --head "${{ github.ref }}" \
                   --base main
          echo "pull_request_number=$(gh pr view --json number --jq .number)" >> $GITHUB_OUTPUT

  formatCheck:
    needs: createPR
    if: needs.createPR.outputs.pr_number
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: refs/pull/${{ needs.createPR.outputs.pr_number }}/head

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest yapf

      - name: Check format with YAPF
        run: |
          STYLE="pep8"
          yapf --diff --recursive --style=$STYLE src || {
            echo "Some Python files do not conform to the $STYLE style."
            echo "Please run YAPF on your changes with the $STYLE style and update the PR."
            exit 1
          }

  mergePR:
    needs: [createPR, formatCheck]
    if: needs.createPR.outputs.pr_number && needs.formatCheck.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Automatically merge PR
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr merge ${{ needs.createPR.outputs.pr_number }} --squash